leammaSummary 
 求 n 个 相同 因数 乘积 的 运算 ， 叫做 乘方 ， 乘方 的 结果 叫做 幂 ( power ) 。 其中 ， a 叫做 底数 ( base   number ) ， n 叫做 指数 ( exponent ) 。 当 a ⁿ 看作 a 的 n 次 乘方 的 结果 时 ， 也 可 读作 “ a 的 n 次 幂 ” 或 “ a 的 n 次方 ” 。 一个 数都 可以 看作 自己 本身 的 一次 方 ， 指数 1 通常 省略 不写 。 在 写 分数 和 负数 的 n 次方 时要 加 括号 。 四则运算 顺序 ： 先 乘方 ， 再 括号 （ 先 小括号 ， 再 中括号 ， 最后 大括号 ） ， 接 乘除 ， 尾 加减 。 计算 一个 数 的 小 数次 方 ， 如果 那个 小数 是 有理数 ， 就 把 它 化为   （ 即 分数 ） 的 形式 。 特别 的 ， 除 0 以外 的 任何 数 的 0 次方 均 等于 1 。 0 的 非 正指数 幂 没有 意义 。 
 定义 
 求 n 个 相同 因数 乘积 的 运算 ， 叫做 乘方 ， 乘方 的 结果 叫做 幂 ( power ) 。 其中 ， a 叫做 底数 ( base   number ) ， n 叫做 指数 ( exponent ) ， 当 a ⁿ 看作 a 的 n 次 乘方 的 结果 时 ， 也 可 读作 “ a 的 n 次 幂 ” 或 “ a 的 n 次方 ” 。 
 注 ： 下面 的 讨论 中 ， 底数 均 不 为 0 。 
 常用 公式 
 同底数幂 相乘 除 ， 原来 的 底数 作 底数 ， 指数 的 和 或 差作 指数 。 [ 1 ]   
 
 
 例如 ： 
 1 ）   ； 
 2 ）   ； 
 3 ） 
 推导 示例 ： 
 设   中 ， m = 2 ， n = 4 ， 那么 
 
 = 
 = 
 = 
 = 
   ， 其中   * （ 即 k 为 正整数 ） 
   ， 其中   ，   * 
 推导 ： 
 
 = 
 = 
 = 1 
   ， 其中   ，   * 
 推导 ： 
 
 = 
 = 
 = 
   ， 其中   ，   ，   * （ 即 m , n 为 正整数 ） 
   ， 其中 ，   ，   ，   ，   * 
 推导 ： 
 
 = 
 = 
 = 
 = 1 / 
 = 
 分数指数幂 时 ， 当   * ，   且   时 ， 则 该数 在 实数 范围 内 无 意义 
 特别 地 ， 0 的 非 正数 指数 幂 没有 意义 [ 2 ]   
 两数 和 乘 两数 差 等于 它们 的 平方差 。 
 用 字母 表示 为 ： 
 
 推导 ： 
 
 = 
 = 
 = 
 
 证明 ： 
 = 
 = 
 幂 的 乘方 ， 底数 不变 ， 指数 相乘 。 
 用 字母 表示 为 ： 
   　 　 
 特别 指出 ： 
 积 的 乘方 ， 先 把 积中 的 每 一个 因数 分别 乘方 ， 再 把 所得 的 幂 相乘 。 
 用 字母 表示 为 ： 
 
 这个 积 的 乘 方法 则 也 适用 于 三个 以上 乘数 积 的 乘方 。 如 ： 
 
 同 指数 幂 相乘 ， 指数 不变 ， 底数 相乘 。 
 用 字母 表示 为 ： 
 
 两数 和 （ 或 差 ） 的 平方 ， 等于 它们 的 平方 的 和 加上 （ 或者 减去 ） 它们 的 积 的 2 倍 。 
 用 字母 表示 为 ： 
 
 我们 一般 把 它 叫作 完全平方公式 。 
 
 
 艾萨克 · 牛顿 发现 了 二项式 。 二项式 是 乘方 里 的 复杂 运算 。 右图 为 二项式 计算 法则 。 一般来说 ， 二项式 的 各项 系数 按 排列 顺序 也 可以 这样 表示 ： 
 
 1 
 1   1 
 1   2   1 
 1   3   3   1 
 1   4   6   4   1 
 1   5   10   10   5   1 
 … …   … …   … … 
 这 就是 著名 的 杨辉三角 。 
 （ 1 ） 负数 的 偶次 幂 是 正数 ， 负数 的 奇数 幂 是 负数 。 
 (   2 ) 正数 的 任何 次 幂 都 是 正数 。 
 （ 3 ） 0 的 任何 正 数次 幂 都 是 0 。 
 速算 
 有些 较 特殊 的 数 的 平方 ， 掌握 规律 后 ， 可以 使 计算速度 加快 ， 现 介绍 如下 。 
 由 n 个 1 组成 的 数 的 平方 
 我们 观察 下面 的 例子 。 
 1 ² = 1 
 11 ² = 121 
 111 ² = 12321 
 1111 ² = 1234321 
 11111 ² = 123454321 
 111111 ² = 12345654321 
 … … 
 由 以上 例子 可以 看出 这样 一个 规律 ； 求 由 n 个 1 组成 的 数 的 平方 ， 先由 1 写到 n ， 再 由 n 写到 1 ， 即 ： 
 11 … 1 （ n 个 1 ） ² = 1234 … ( n - 1 ) n ( n - 1 ) … 4321 
 注意 ： 其中 n 只 占 一个 数位 ， 满 10 应 向前 进位 ， 当然 ， 这样 的 速算 不宜 位数 过多 。 
 由 n 个 3 组成 的 数 的 平方 
 我们 仍 观察 具体 实例 ： 
 3 ² = 9 
 33 ² = 1089 
 333 ² = 110889 
 3333 ² = 11108889 
 33333 ² = 1111088889 
 由此可知 ： 
 33 … 3 （ n 个 3 ） ²   =   11 … 11 [ ( n - 1 ) 个 1 ]   0   88 … 88 [ ( n - 1 ) 个 8 ]   9 
 个位 是 5 的 数 的 平方 
 把 a 看作 10 的 个数 ， 这样 个位数 字 是 5 的 数 的 平方 可以 写成 ； ( 10a + 5 ) ² 的 形式 。 根据 完全 平 方式 推导 ； 
 
 = 
 = 
 = 
 由此可知 ： 个位数 字 是 5 的 数 的 平方 ， 等于 去掉 个位数 字后 ， 所得 的 数 与 比 这个 数大 1 的 数 相乘 的 积 ， 后面 再 写 上 25 。 
 科学 记数法 
 一个 绝对值 大于 等于 1 的 数 可以 写成   （ 其中 ， ， 且 n 为 正整数 ） 的 形式 叫做 科学 记数法   例如 ：   、 
 当是 负 整数 指数 幂 的 时候 ， 绝对值 小于 1 的 数 也 可以 用 科学 记数法 表示 。 例如 ：   ， 即 绝对值 小于 1 的 数 也 可以 用 科学 记数法 表示 为   的 形式 ， 其中   ，   是 正整数 。 
 任何 非 0 实数 的 0 次方 都 等于 1 。 [ 3 ]   
 pascal 语言 实现 自然数 
 注意 : 只能 用于 求 底数 、 指数 均 为 自然数 , 且 幂 不 大于 2147483647 的 乘方 运算 , 否则 会 出错 . 
 